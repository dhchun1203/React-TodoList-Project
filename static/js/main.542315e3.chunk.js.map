{"version":3,"sources":["components/TodoInsert.js","components/TodoTemplate.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","className","placeholder","type","TodoTemplate","children","TodoListItem","todo","onRemove","onToggle","style","id","text","checked","cn","onClick","React","memo","prevProps","nextProps","TodoList","todos","rowRenderer","index","key","width","height","rowCount","length","rowHeight","list","outline","createBulkTodos","array","i","push","todoReducer","action","concat","filter","map","App","useReducer","undefined","dispatch","nextId","useRef","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.542315e3.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport './TodoInsert.scss';\n\nconst TodoInsert = ({ onInsert }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      onInsert(value);\n      setValue('');\n      e.preventDefault();\n    },\n    [onInsert, value],\n  );\n\n  return (\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\n      <input\n        placeholder=\"할 일을 입력하세요\"\n        value={value}\n        onChange={onChange}\n      />\n      <button type=\"submit\">\n        <MdAdd />\n      </button>\n    </form>\n  );\n};\n\nexport default TodoInsert;\n","// 화면을 가운데에 정렬, 앱 타이틀(일정 관리)을 보여줌. children으로 내부 JSX를 props로 받아 와서 렌더링.\nimport React from 'react';\nimport './TodoTemplate.scss';\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <div className=\"TodoTemplate\">\n      <div className=\"app-title\">일정 관리</div>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default TodoTemplate;\n","import React from 'react';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\nimport cn from 'classnames';\nimport './TodoListItem.scss';\n\nconst TodoListItem = ({ todo, onRemove, onToggle, style }) => {\n  const { id, text, checked } = todo;\n\n  return (\n    <div className=\"TodoListItem-virtualized\" style={style}>\n      <div className=\"TodoListItem\">\n        <div\n          className={cn('checkbox', { checked })}\n          onClick={() => onToggle(id)}\n        >\n          {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n          <div className=\"text\">{text}</div>\n        </div>\n        <div className=\"remove\" onClick={() => onRemove(id)}>\n          <MdRemoveCircleOutline />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(\n  TodoListItem,\n  (prevProps, nextProps) => prevProps.todo === nextProps.todo,\n);\n","import React, { useCallback } from 'react';\nimport TodoListItem from './TodoListItem';\nimport './TodoList.scss';\nimport { List } from 'react-virtualized';\n\nconst TodoList = ({ todos, onRemove, onToggle }) => {\n  const rowRenderer = useCallback(\n    ({ index, key, style }) => {\n      const todo = todos[index];\n      return (\n        <TodoListItem\n          todo={todo}\n          key={key}\n          onRemove={onRemove}\n          onToggle={onToggle}\n          style={style}\n        />\n      );\n    },\n    [onRemove, onToggle, todos],\n  );\n  return (\n    <List\n      className={TodoList}\n      width={489.492}\n      height={518}\n      rowCount={todos.length}\n      rowHeight={71.48}\n      rowRenderer={rowRenderer}\n      list={todos}\n      style={{ outline: 'none' }}\n    />\n  );\n};\n\nexport default React.memo(TodoList);\n","import React, { useCallback, useReducer, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false,\n    });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      return todos.concat(action.todo);\n    case 'REMOVE':\n      return todos.filter((todo) => todo.id !== action.id);\n    case 'TOGGLE':\n      return todos.map((todo) =>\n        todo.id === action.id ? { ...todo, checked: !todo.checked } : todo,\n      );\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback((text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    dispatch({ type: 'INSERT', todo });\n    nextId.current += 1;\n  }, []);\n\n  const onRemove = useCallback((id) => {\n    dispatch({ type: 'REMOVE', id });\n  }, []);\n\n  const onToggle = useCallback((id) => {\n    dispatch({ type: 'TOGGLE', id });\n  }, []);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}